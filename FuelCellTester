/*
Fuel Cell Test-- code for reading current and voltage
*/
#include <SD.h>
#include <File.h> 

const int chipSelect = 10; //CS pin
File dataFile;
double voltage;
unsigned int ADCValue;
long vcc;
double current;
double x2;
double x1;

void setup() {
  Serial.begin (9600);
  initializeSDCard();  
  dataFile = SD.open ("datalog.txt",FILE_WRITE);
  dataFile.println ("ADC Value, Vcc, Voltage, A1 Reading, A2 Reading, Current");
  dataFile.close();
}

void loop() {
    voltage = getVoltage ();
    current = getCurrent ();
    dataFile = SD.open ("datalog.txt", FILE_WRITE); 
    
    if (dataFile){ 
      dataFile.print (ADCValue);
      dataFile.print (", ");
      dataFile.print (vcc);
      dataFile.print (", ");
      dataFile.print (voltage);
      dataFile.print (", ");
      dataFile.print (x1);
      dataFile.print (", ");
      dataFile.print (x2);
      dataFile.print (", ");
      dataFile.println (current);
      dataFile.close();
      Serial.print ("Voltage= ");
      Serial.println (voltage);
      Serial.print ("Current= ");
      Serial.println (current);
  }
    else{
      Serial.println ("error opening datalog.txt");
  }
  delay (1000);
}

double getVoltage (){
  double r1; //input resistor value 
  double r2; //input resistor value
  vcc = readVcc()/1000.0;
  ADCValue = analogRead (0);
  voltage = ((ADCValue/1023.0)*((r1+r2)/r2)*vcc);
  return voltage;  
}

double getCurrent (){
  double v; //voltage drop
  double r = .1;
  x1=analogRead (1);
  x2=analogRead (2); 
  v= (x2-x1)/1023.0;
  current = v/r;
  return current;
}

long readVcc() {
   long result;
  // Read 1.1V reference against AVcc
  ADMUX = _BV(REFS0) | _BV(MUX3) | _BV(MUX2) | _BV(MUX1);
  delay(2); // Wait for Vref to settle
  ADCSRA |= _BV(ADSC); // Convert
  while (bit_is_set(ADCSRA,ADSC));
  result = ADCL;
  result |= ADCH<<8;
  result = 1125300L / result; // Back-calculate AVcc in mV
  return result;
}

void initializeSDCard ()
//initializes SD card
{
  Serial.print ("Initializing SD card...");
  pinMode (10, OUTPUT);
   if (!SD.begin(chipSelect)) {
    Serial.println("Card failed, or not present");
    // don't do anything more:
    return;
  }
  Serial.println("card initialized.");
}
